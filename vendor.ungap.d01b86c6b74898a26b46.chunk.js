"use strict";(self.webpackChunkpersonal_website=self.webpackChunkpersonal_website||[]).push([[60],{4690:(e,r,t)=>{t.d(r,{Ay:()=>l});const n="object"==typeof self?self:globalThis,s=e=>((e,r)=>{const t=(r,t)=>(e.set(t,r),r),s=c=>{if(e.has(c))return e.get(c);const[a,o]=r[c];switch(a){case 0:case-1:return t(o,c);case 1:{const e=t([],c);for(const r of o)e.push(s(r));return e}case 2:{const e=t({},c);for(const[r,t]of o)e[s(r)]=s(t);return e}case 3:return t(new Date(o),c);case 4:{const{source:e,flags:r}=o;return t(new RegExp(e,r),c)}case 5:{const e=t(new Map,c);for(const[r,t]of o)e.set(s(r),s(t));return e}case 6:{const e=t(new Set,c);for(const r of o)e.add(s(r));return e}case 7:{const{name:e,message:r}=o;return t(new n[e](r),c)}case 8:return t(BigInt(o),c);case"BigInt":return t(Object(BigInt(o)),c);case"ArrayBuffer":return t(new Uint8Array(o).buffer,o);case"DataView":{const{buffer:e}=new Uint8Array(o);return t(new DataView(e),o)}}return t(new n[a](o),c)};return s})(new Map,e)(0),c="",{toString:a}={},{keys:o}=Object,u=e=>{const r=typeof e;if("object"!==r||!e)return[0,r];const t=a.call(e).slice(8,-1);switch(t){case"Array":return[1,c];case"Object":return[2,c];case"Date":return[3,c];case"RegExp":return[4,c];case"Map":return[5,c];case"Set":return[6,c];case"DataView":return[1,t]}return t.includes("Array")?[1,t]:t.includes("Error")?[7,t]:[2,t]},f=([e,r])=>0===e&&("function"===r||"symbol"===r),i=(e,{json:r,lossy:t}={})=>{const n=[];return((e,r,t,n)=>{const s=(e,r)=>{const s=n.push(e)-1;return t.set(r,s),s},c=n=>{if(t.has(n))return t.get(n);let[a,i]=u(n);switch(a){case 0:{let r=n;switch(i){case"bigint":a=8,r=n.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+i);r=null;break;case"undefined":return s([-1],n)}return s([a,r],n)}case 1:{if(i){let e=n;return"DataView"===i?e=new Uint8Array(n.buffer):"ArrayBuffer"===i&&(e=new Uint8Array(n)),s([i,[...e]],n)}const e=[],r=s([a,e],n);for(const r of n)e.push(c(r));return r}case 2:{if(i)switch(i){case"BigInt":return s([i,n.toString()],n);case"Boolean":case"Number":case"String":return s([i,n.valueOf()],n)}if(r&&"toJSON"in n)return c(n.toJSON());const t=[],l=s([a,t],n);for(const r of o(n))!e&&f(u(n[r]))||t.push([c(r),c(n[r])]);return l}case 3:return s([a,n.toISOString()],n);case 4:{const{source:e,flags:r}=n;return s([a,{source:e,flags:r}],n)}case 5:{const r=[],t=s([a,r],n);for(const[t,s]of n)(e||!f(u(t))&&!f(u(s)))&&r.push([c(t),c(s)]);return t}case 6:{const r=[],t=s([a,r],n);for(const t of n)!e&&f(u(t))||r.push(c(t));return t}}const{message:l}=n;return s([a,{name:i,message:l}],n)};return c})(!(r||t),!!r,new Map,n)(e),n},l="function"==typeof structuredClone?(e,r)=>r&&("json"in r||"lossy"in r)?s(i(e,r)):structuredClone(e):(e,r)=>s(i(e,r))}}]);